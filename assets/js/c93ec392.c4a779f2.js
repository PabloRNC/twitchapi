"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7597],{5529:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>h});var o=n(5893),i=n(1151);const r={title:"Token Generation",sidebar_position:2},a="TOKEN GENERATION",s={id:"Getting Started/tokenGeneration",title:"Token Generation",description:"*",source:"@site/guide/chatbot/Getting Started/tokenGeneration.md",sourceDirName:"Getting Started",slug:"/Getting Started/tokenGeneration",permalink:"/twitchapi/guide/chatbot/Getting Started/tokenGeneration",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Token Generation",sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Creating a Twitch Developer Application",permalink:"/twitchapi/guide/chatbot/Getting Started/createTwitchApp"},next:{title:"Enviroment Variables",permalink:"/twitchapi/guide/chatbot/Getting Started/enviromentVariables"}},c={},h=[{value:"Implicit Grant Flow",id:"implicit-grant-flow",level:2},{value:"Authorization Code Grant Flow",id:"authorization-code-grant-flow",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"token-generation",children:"TOKEN GENERATION"}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.p,{children:"Having created a Twitch Developer Application you have to generate an user access token for your chatbot."}),"\n",(0,o.jsx)(t.admonition,{type:"warning",children:(0,o.jsx)(t.p,{children:"At generating the user access token you will need to authorize with the application you have created with a Twitch's account. Then you will be able to get an user access token of that account and the chatbot will be running in that account. So is recommended to create another Twitch's account for the chatbot."})}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsx)(t.p,{children:"In this guide we will explore to types of token generation. The generation with the Implicit Grant Flow and Authorization Code Grant Flow."})}),"\n",(0,o.jsx)(t.h2,{id:"implicit-grant-flow",children:"Implicit Grant Flow"}),"\n",(0,o.jsx)(t.p,{children:"This flow is used to generate user access tokens with a non-server side."}),"\n",(0,o.jsxs)(t.p,{children:["To generate the user access token with this flow you have to create an authorization URI with the scopes ",(0,o.jsx)(t.code,{children:"chat:read"})," and ",(0,o.jsx)(t.code,{children:"chat:edit"}),". See ",(0,o.jsx)(t.a,{href:"https://dev.twitch.tv/docs/authentication/getting-tokens-oauth/#implicit-grant-flow",children:"this"})," to create a proper authorization URI."]}),"\n",(0,o.jsx)(t.admonition,{type:"warning",children:(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"chat:read"})," and ",(0,o.jsx)(t.code,{children:"chat:edit"})," are the basic scopes that are needed to connect with Twitch IRC Server but the package allows to make other actions such banning users or deleting messages that are needed other scopes and the Moderator role. If you run an action which need authorization without the required scopes an ",(0,o.jsx)(t.code,{children:"401 Unauthorized"})," status code will be thrown."]})}),"\n",(0,o.jsxs)(t.p,{children:["Having generated a valid authorization URI an filled the ",(0,o.jsx)(t.code,{children:"client_id"})," and ",(0,o.jsx)(t.code,{children:"redirect_uri"})," with your Twitch Application's client id and the redirect uri.\r\nYou only have to browse the authorization URI and authorize with your application. Once you have been authorized within your application you have to get the current URI that are you browsing, in the URI you will see a token field. This is the user token you will use to start your own chatbot."]}),"\n",(0,o.jsx)(t.admonition,{type:"warning",children:(0,o.jsx)(t.p,{children:"The user tokens generated with this flow with last for about a 60 days if you haven't remove the authorization of the Twitch Application. Once it has expired you will have to regenerate the token with the same steps."})}),"\n",(0,o.jsx)(t.h2,{id:"authorization-code-grant-flow",children:"Authorization Code Grant Flow"}),"\n",(0,o.jsx)(t.p,{children:"This flow is used to generate user access tokens with a server side. And is the flow we recommend to use."}),"\n",(0,o.jsxs)(t.p,{children:["To generate an user access token with this flow you have to do the same steps as in the ",(0,o.jsx)(t.a,{href:"#implicit-grant-flow",children:"Implicit Grant Flow"}),". But you have to set ",(0,o.jsx)(t.code,{children:"response_type"})," field by ",(0,o.jsx)(t.code,{children:"code"})," instead of ",(0,o.jsx)(t.code,{children:"token"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["When you get the URI containing the token as in the Implicit Grant Flow you will see that instead of that you have a ",(0,o.jsx)(t.code,{children:"code"})," field. You have to copy this code field."]}),"\n",(0,o.jsxs)(t.p,{children:["With the code field you have to do a ",(0,o.jsx)(t.strong,{children:"Post Request"})," to this URI example:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-plain",children:"client_id=hof5gwx0su6owfnys0yan9c87zr6t\r\n&client_secret=41vpdji4e9gif29md0ouet6fktd2\r\n&code=gulfwdmys5lsm6qyz4xiz9q32l10\r\n&grant_type=authorization_code\r\n&redirect_uri=http://localhost:3000\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["As you see you will need the client secret of your application. This secret can be generated in your application page at ",(0,o.jsx)(t.a,{href:"https://dev.twitch.tv/console",children:"Twitch Developer Console"}),"."]})}),"\n",(0,o.jsxs)(t.admonition,{type:"info",children:[(0,o.jsxs)(t.p,{children:["This is an example of how to generate the token with ",(0,o.jsx)(t.code,{children:"node-fetch"})," package."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"\r\nconst fetch = require('node-fetch')\r\n\r\nconst data = {\r\n    client_id: '<Your client id goes here>',\r\n    client_secret: '<Your client secret goes here>',\r\n    code: '<Your generated code goes here>',\r\n    redirect_uri: '<Your redirect URI goes here>'\r\n}\r\n\r\nconst response = await fetch(`client_id=${data.client_id}\r\n&client_secret=${data.client_secret}\r\n&code=${data.code}\r\n&grant_type=authorization_code\r\n&redirect_uri=${data.redirect_uri}`, { method: \"POST\" })\r\n\r\nconst json = await response.json()\r\n\r\nconsole.log(json.access_token)\r\n\n"})})]}),"\n",(0,o.jsx)(t.p,{children:"This is an example of the response sent when doing the post."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\r\n  "access_token": "rfx2uswqe8l4g1mkagrvg5tv0ks3",\r\n  "expires_in": 14124,\r\n  "refresh_token": "5b93chm6hdve3mycz05zfzatkfdenfspp1h1ar2xxdalen01",\r\n  "scope": [\r\n    "channel:moderate",\r\n    "chat:edit",\r\n    "chat:read"\r\n  ],\r\n  "token_type": "bearer"\r\n}\n'})}),"\n",(0,o.jsxs)(t.p,{children:["As you can see, you receive a refresh_token field that contains another type of token used to refresh the access token when it has expired. For further information go to the ",(0,o.jsx)(t.a,{href:"https://dev.twitch.tv/docs/authentication/refresh-tokens/#refreshing-access-tokens",children:"Official Authorization Code Grant Documentation"}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"warning",children:(0,o.jsx)(t.p,{children:"The user tokens generated with this flow expires much faster than the Implicit Grant Flow tokens. Despite this we strongly recommend using this flow as it doesn't requires you to stop your runtime to change the token as the change can be done programmatically and in futures updates it could be handled by the package"})})]})}function l(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var o=n(7294);const i={},r=o.createContext(i);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);